{
	"Empty pytest test": {
		"prefix": ["pytest", "test", "pt"],
		"body": [
			"def test_$1():",
			"\tassert False"
		],
		"description": "Empty pytest test"
	},
	"Empty parametrized pytest test": {
		"prefix": ["parametrized-pytest", "test-parametrized", "ptp"],
		"body": [
			"@pytest.mark.parametrize('$1',[])",
			"def test_$2($1):",
			"\tassert False"
		],
		"description": "Empty parametrized pytest test"
	},

	

	"Empty pytest fixture": {
		"prefix": ["raises-pytest", "pytest-raises", "ptr"],
		"body": [
			"with pytest.raises($1)$2:",
			"\t"
		],
		"description": "Empty pytest fixture"
	},

	"Empty pytest describe": {
		"prefix": ["describe-pytest", "pytest-describe", "ptd"],
		"body": [
			"def describe_$1():",
			"\t$0"
		],
		"description": "Empty pytest describe"
	},

	"Necessary BDD imports": {
		"prefix": ["bdd", "ptbdd"],
		"body": [
			"from pytest_bdd import given, when, then, parsers"
		],
		"description": "Empty pytest given"
	},

	"Empty BDD given": {
		"prefix": ["given", "ptbg"],
		"body": [
			"@given('$1')",
			"def test_$2():",
			"\t$0"
		],
		"description": "Empty pytest given"
	},

	"Empty BDD when": {
		"prefix": ["when", "ptbw"],
		"body": [
			"@when('$1')",
			"def test_$2():",
			"\t$0"
		],
		"description": "Empty pytest when"
	},

	"Empty BDD then": {
		"prefix": ["then", "ptbt"],
		"body": [
			"@then('$1')",
			"def test_$2():",
			"\t$0"
		],
		"description": "Empty pytest then"
	},

	"Empty BDD given parsed": {
		"prefix": ["given-parsed", "ptbgp"],
		"body": [
			"@given(parsers.parse('$1'))",
			"def test_$2():",
			"\t$0"
		],
		"description": "Empty pytest given"
	},

	"Empty BDD when parsed": {
		"prefix": ["when-parsed", "ptbwp"],
		"body": [
			"@when(parsers.parse('$1'))",
			"def test_$2():",
			"\t$0"
		],
		"description": "Empty pytest when"
	},

	"Empty BDD then parsed": {
		"prefix": ["then-parsed", "ptbtp"],
		"body": [
			"@then(parsers.parse('$1'))",
			"def test_$2():",
			"\t$0"
		],
		"description": "Empty pytest then"
	},

}
